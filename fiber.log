08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.db:50] - get-members: find_maps members {}
08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.db:53] - get-members returned: *** TOO LONG ***
08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-2
---------------------------------------
val: "member-2" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-2"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-1
---------------------------------------
val: "member-1" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-1"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-15
---------------------------------------
val: "member-15" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-15"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-2
---------------------------------------
val: "member-2" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-2"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-16
---------------------------------------
val: "member-16" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-16"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-15
---------------------------------------
val: "member-15" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-15"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-17
---------------------------------------
val: "member-17" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-17"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-16
---------------------------------------
val: "member-16" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-16"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-17
---------------------------------------
val: "member-17" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-17"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-18
---------------------------------------
val: "member-18" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-18"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-18
---------------------------------------
val: "member-18" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-18"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-16
---------------------------------------
val: "member-16" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-16"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-18
---------------------------------------
val: "member-18" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-18"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-18
---------------------------------------
val: "member-18" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-18"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-17
---------------------------------------
val: "member-17" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-17"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-23
---------------------------------------
val: "member-23" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-23"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-16
---------------------------------------
val: "member-16" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-16"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-23
---------------------------------------
val: "member-23" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-23"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-18
---------------------------------------
val: "member-18" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-18"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-23
---------------------------------------
val: "member-23" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-23"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-21
---------------------------------------
val: "member-21" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-21"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-17
---------------------------------------
val: "member-17" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-17"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-21
---------------------------------------
val: "member-21" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-21"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-21
---------------------------------------
val: "member-21" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-21"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-23
---------------------------------------
val: "member-23" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-23"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-22
---------------------------------------
val: "member-22" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-22"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-17
---------------------------------------
val: "member-17" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-17"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-22
---------------------------------------
val: "member-22" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-22"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-21
---------------------------------------
val: "member-21" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-21"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-22
---------------------------------------
val: "member-22" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-22"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-23
---------------------------------------
val: "member-23" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-23"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-18
---------------------------------------
val: "member-18" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-18"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-15
---------------------------------------
val: "member-15" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-15"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-2
---------------------------------------
val: "member-2" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-2"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-24
---------------------------------------
val: "member-24" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-24"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-17
---------------------------------------
val: "member-17" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-17"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-24
---------------------------------------
val: "member-24" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-24"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-21
---------------------------------------
val: "member-21" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-21"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-24
---------------------------------------
val: "member-24" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-24"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-23
---------------------------------------
val: "member-23" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-23"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-25
---------------------------------------
val: "member-25" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-25"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-18
---------------------------------------
val: "member-18" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-18"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-25
---------------------------------------
val: "member-25" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-25"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-22
---------------------------------------
val: "member-22" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-22"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-25
---------------------------------------
val: "member-25" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-25"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-24
---------------------------------------
val: "member-24" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-24"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-26
---------------------------------------
val: "member-26" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-26"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-18
---------------------------------------
val: "member-18" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-18"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-26
---------------------------------------
val: "member-26" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-26"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-23
---------------------------------------
val: "member-23" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-23"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-26
---------------------------------------
val: "member-26" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-26"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-25
---------------------------------------
val: "member-25" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-25"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-24
---------------------------------------
val: "member-24" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-24"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-26
---------------------------------------
val: "member-26" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-26"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-24
---------------------------------------
val: "member-24" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-24"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-26
---------------------------------------
val: "member-26" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-26"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-21
---------------------------------------
val: "member-21" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-21"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-25
---------------------------------------
val: "member-25" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-25"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-27
---------------------------------------
val: "member-27" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-27"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-21
---------------------------------------
val: "member-21" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-21"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-27
---------------------------------------
val: "member-27" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-27"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-26
---------------------------------------
val: "member-26" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-26"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-27
---------------------------------------
val: "member-27" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-27"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-27
---------------------------------------
val: "member-27" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-27"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-28
---------------------------------------
val: "member-28" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-28"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-22
---------------------------------------
val: "member-22" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-22"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-28
---------------------------------------
val: "member-28" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-28"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-27
---------------------------------------
val: "member-27" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-27"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-28
---------------------------------------
val: "member-28" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-28"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-28
---------------------------------------
val: "member-28" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-28"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-22
---------------------------------------
val: "member-22" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-22"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-16
---------------------------------------
val: "member-16" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-16"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-2
---------------------------------------
val: "member-2" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-2"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:44 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-7
---------------------------------------
val: "member-7" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-7"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-7
---------------------------------------
val: "member-7" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-7"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-7
---------------------------------------
val: "member-7" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-7"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-4
---------------------------------------
val: "member-4" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-4"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-4
---------------------------------------
val: "member-4" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-4"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-7
---------------------------------------
val: "member-7" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-7"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-4
---------------------------------------
val: "member-4" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-4"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-4
---------------------------------------
val: "member-4" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-4"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-11
---------------------------------------
val: "member-11" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-11"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-11
---------------------------------------
val: "member-11" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-11"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-11
---------------------------------------
val: "member-11" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-11"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-11
---------------------------------------
val: "member-11" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-11"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-7
---------------------------------------
val: "member-7" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-7"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-42
---------------------------------------
val: "member-42" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-42"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-42
---------------------------------------
val: "member-42" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-42"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-42
---------------------------------------
val: "member-42" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-42"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-42
---------------------------------------
val: "member-42" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-42"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-45
---------------------------------------
val: "member-45" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-45"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-45
---------------------------------------
val: "member-45" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-45"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-42
---------------------------------------
val: "member-42" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-42"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-45
---------------------------------------
val: "member-45" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-45"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-45
---------------------------------------
val: "member-45" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-45"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-44
---------------------------------------
val: "member-44" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-44"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-44
---------------------------------------
val: "member-44" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-44"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-44
---------------------------------------
val: "member-44" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-44"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-44
---------------------------------------
val: "member-44" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-44"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-45
---------------------------------------
val: "member-45" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-45"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-44
---------------------------------------
val: "member-44" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-44"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-45
---------------------------------------
val: "member-45" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-45"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-47
---------------------------------------
val: "member-47" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-47"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-47
---------------------------------------
val: "member-47" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-47"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-47
---------------------------------------
val: "member-47" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-47"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-47
---------------------------------------
val: "member-47" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-47"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-52
---------------------------------------
val: "member-52" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-52"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-52
---------------------------------------
val: "member-52" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-52"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-52
---------------------------------------
val: "member-52" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-52"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-52
---------------------------------------
val: "member-52" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-52"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-1
---------------------------------------
val: "member-1" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-1"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-2
---------------------------------------
val: "member-2" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-2"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-52
---------------------------------------
val: "member-52" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-52"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-44
---------------------------------------
val: "member-44" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-44"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-11
---------------------------------------
val: "member-11" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-11"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-28
---------------------------------------
val: "member-28" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-28"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-28
---------------------------------------
val: "member-28" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-28"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-27
---------------------------------------
val: "member-27" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-27"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-26
---------------------------------------
val: "member-26" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-26"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-25
---------------------------------------
val: "member-25" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-25"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-24
---------------------------------------
val: "member-24" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-24"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-23
---------------------------------------
val: "member-23" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-23"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-22
---------------------------------------
val: "member-22" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-22"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-21
---------------------------------------
val: "member-21" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-21"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-17
---------------------------------------
val: "member-17" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-17"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-15
---------------------------------------
val: "member-15" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-15"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-11
---------------------------------------
val: "member-11" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-11"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-7
---------------------------------------
val: "member-7" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-7"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-7
---------------------------------------
val: "member-7" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-7"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-4
---------------------------------------
val: "member-4" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-4"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-56
---------------------------------------
val: "member-56" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-56"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-49
---------------------------------------
val: "member-49" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-49"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-56
---------------------------------------
val: "member-56" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-56"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-56
---------------------------------------
val: "member-56" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-56"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-49
---------------------------------------
val: "member-49" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-49"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-56
---------------------------------------
val: "member-56" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-56"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-55
---------------------------------------
val: "member-55" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-55"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-56
---------------------------------------
val: "member-56" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-56"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-55
---------------------------------------
val: "member-55" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-55"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-54
---------------------------------------
val: "member-54" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-54"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-55
---------------------------------------
val: "member-55" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-55"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-54
---------------------------------------
val: "member-54" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-54"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-60
---------------------------------------
val: "member-60" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-60"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-55
---------------------------------------
val: "member-55" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-55"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-60
---------------------------------------
val: "member-60" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-60"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-57
---------------------------------------
val: "member-57" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-57"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-55
---------------------------------------
val: "member-55" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-55"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-57
---------------------------------------
val: "member-57" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-57"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-57
---------------------------------------
val: "member-57" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-57"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-56
---------------------------------------
val: "member-56" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-56"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-59
---------------------------------------
val: "member-59" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-59"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-56
---------------------------------------
val: "member-56" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-56"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-59
---------------------------------------
val: "member-59" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-59"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-59
---------------------------------------
val: "member-59" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-59"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-60
---------------------------------------
val: "member-60" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-60"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-61
---------------------------------------
val: "member-61" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-61"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-56
---------------------------------------
val: "member-56" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-56"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-61
---------------------------------------
val: "member-61" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-61"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-59
---------------------------------------
val: "member-59" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-59"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-61
---------------------------------------
val: "member-61" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-61"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-60
---------------------------------------
val: "member-60" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-60"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-62
---------------------------------------
val: "member-62" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-62"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-57
---------------------------------------
val: "member-57" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-57"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-62
---------------------------------------
val: "member-62" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-62"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-60
---------------------------------------
val: "member-60" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-60"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-62
---------------------------------------
val: "member-62" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-62"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-61
---------------------------------------
val: "member-61" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-61"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-57
---------------------------------------
val: "member-57" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-57"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-60
---------------------------------------
val: "member-60" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-60"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-62
---------------------------------------
val: "member-62" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-62"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-63
---------------------------------------
val: "member-63" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-63"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-63
---------------------------------------
val: "member-63" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-63"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-61
---------------------------------------
val: "member-61" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-61"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-63
---------------------------------------
val: "member-63" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-63"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-63
---------------------------------------
val: "member-63" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-63"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-62
---------------------------------------
val: "member-62" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-62"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-64
---------------------------------------
val: "member-64" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-64"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-64
---------------------------------------
val: "member-64" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-64"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-62
---------------------------------------
val: "member-62" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-62"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-64
---------------------------------------
val: "member-64" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-64"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-64
---------------------------------------
val: "member-64" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-64"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-63
---------------------------------------
val: "member-63" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-63"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-59
---------------------------------------
val: "member-59" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-59"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-55
---------------------------------------
val: "member-55" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-55"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-49
---------------------------------------
val: "member-49" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-49"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-54
---------------------------------------
val: "member-54" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-54"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-49
---------------------------------------
val: "member-49" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-49"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-66
---------------------------------------
val: "member-66" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-66"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-66
---------------------------------------
val: "member-66" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-66"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-62
---------------------------------------
val: "member-62" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-62"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-66
---------------------------------------
val: "member-66" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-66"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-64
---------------------------------------
val: "member-64" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-64"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-66
---------------------------------------
val: "member-66" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-66"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-63
---------------------------------------
val: "member-63" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-63"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-66
---------------------------------------
val: "member-66" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-66"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-67
---------------------------------------
val: "member-67" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-67"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-59
---------------------------------------
val: "member-59" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-59"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-67
---------------------------------------
val: "member-67" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-67"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-64
---------------------------------------
val: "member-64" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-64"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-67
---------------------------------------
val: "member-67" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-67"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-66
---------------------------------------
val: "member-66" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-66"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-67
---------------------------------------
val: "member-67" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-67"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-59
---------------------------------------
val: "member-59" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-59"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-64
---------------------------------------
val: "member-64" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-64"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-67
---------------------------------------
val: "member-67" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-67"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-72
---------------------------------------
val: "member-72" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-72"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-72
---------------------------------------
val: "member-72" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-72"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-38
---------------------------------------
val: "member-38" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-38"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-38
---------------------------------------
val: "member-38" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-38"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-38
---------------------------------------
val: "member-38" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-38"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-72
---------------------------------------
val: "member-72" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-72"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-73
---------------------------------------
val: "member-73" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-73"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-73
---------------------------------------
val: "member-73" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-73"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-72
---------------------------------------
val: "member-72" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-72"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-36
---------------------------------------
val: "member-36" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-36"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-36
---------------------------------------
val: "member-36" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-36"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-36
---------------------------------------
val: "member-36" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-36"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-38
---------------------------------------
val: "member-38" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-38"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-10
---------------------------------------
val: "member-10" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-10"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-10
---------------------------------------
val: "member-10" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-10"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-36
---------------------------------------
val: "member-36" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-36"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-10
---------------------------------------
val: "member-10" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-10"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-10
---------------------------------------
val: "member-10" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-10"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-69
---------------------------------------
val: "member-69" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-69"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-38
---------------------------------------
val: "member-38" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-38"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-69
---------------------------------------
val: "member-69" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-69"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-72
---------------------------------------
val: "member-72" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-72"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-69
---------------------------------------
val: "member-69" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-69"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-69
---------------------------------------
val: "member-69" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-69"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-75
---------------------------------------
val: "member-75" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-75"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-75
---------------------------------------
val: "member-75" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-75"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-72
---------------------------------------
val: "member-72" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-72"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-75
---------------------------------------
val: "member-75" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-75"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-73
---------------------------------------
val: "member-73" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-73"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-74
---------------------------------------
val: "member-74" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-74"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-74
---------------------------------------
val: "member-74" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-74"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-72
---------------------------------------
val: "member-72" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-72"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-74
---------------------------------------
val: "member-74" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-74"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-75
---------------------------------------
val: "member-75" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-75"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-74
---------------------------------------
val: "member-74" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-74"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-73
---------------------------------------
val: "member-73" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-73"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-69
---------------------------------------
val: "member-69" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-69"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-73
---------------------------------------
val: "member-73" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-73"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-75
---------------------------------------
val: "member-75" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-75"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-999
---------------------------------------
val: "member-999" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-999"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-69
---------------------------------------
val: "member-69" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-69"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-999
---------------------------------------
val: "member-999" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-999"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-74
---------------------------------------
val: "member-74" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-74"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-999
---------------------------------------
val: "member-999" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-999"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-76
---------------------------------------
val: "member-76" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-76"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-76
---------------------------------------
val: "member-76" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-76"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-75
---------------------------------------
val: "member-75" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-75"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-76
---------------------------------------
val: "member-76" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-76"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-999
---------------------------------------
val: "member-999" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-999"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-76
---------------------------------------
val: "member-76" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-76"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-36
---------------------------------------
val: "member-36" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-36"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-69
---------------------------------------
val: "member-69" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-69"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-78
---------------------------------------
val: "member-78" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-78"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-78
---------------------------------------
val: "member-78" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-78"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-75
---------------------------------------
val: "member-75" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-75"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-78
---------------------------------------
val: "member-78" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-78"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-78
---------------------------------------
val: "member-78" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-78"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-76
---------------------------------------
val: "member-76" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-76"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-77
---------------------------------------
val: "member-77" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-77"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-77
---------------------------------------
val: "member-77" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-77"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-76
---------------------------------------
val: "member-76" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-76"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-77
---------------------------------------
val: "member-77" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-77"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-77
---------------------------------------
val: "member-77" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-77"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-78
---------------------------------------
val: "member-78" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-78"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-999
---------------------------------------
val: "member-999" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-999"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-77
---------------------------------------
val: "member-77" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-77"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-73
---------------------------------------
val: "member-73" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-73"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-72
---------------------------------------
val: "member-72" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-72"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-69
---------------------------------------
val: "member-69" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-69"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-67
---------------------------------------
val: "member-67" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-67"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-66
---------------------------------------
val: "member-66" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-66"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-64
---------------------------------------
val: "member-64" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-64"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-63
---------------------------------------
val: "member-63" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-63"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-62
---------------------------------------
val: "member-62" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-62"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-61
---------------------------------------
val: "member-61" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-61"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-60
---------------------------------------
val: "member-60" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-60"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-59
---------------------------------------
val: "member-59" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-59"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-57
---------------------------------------
val: "member-57" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-57"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-49
---------------------------------------
val: "member-49" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-49"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-38
---------------------------------------
val: "member-38" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-38"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-36
---------------------------------------
val: "member-36" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-36"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-36
---------------------------------------
val: "member-36" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-36"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-10
---------------------------------------
val: "member-10" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-10"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-1
---------------------------------------
val: "member-1" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-1"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-2
---------------------------------------
val: "member-2" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-2"

---------------------------------------

08-09 19:03:45 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-4
---------------------------------------
val: "member-4" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-4"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-15
---------------------------------------
val: "member-15" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-15"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-11
---------------------------------------
val: "member-11" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-11"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-999
---------------------------------------
val: "member-999" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-999"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-77
---------------------------------------
val: "member-77" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-77"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-73
---------------------------------------
val: "member-73" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-73"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-38
---------------------------------------
val: "member-38" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-38"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-57
---------------------------------------
val: "member-57" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-57"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-55
---------------------------------------
val: "member-55" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-55"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-54
---------------------------------------
val: "member-54" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-54"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-52
---------------------------------------
val: "member-52" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-52"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-49
---------------------------------------
val: "member-49" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-49"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-49
---------------------------------------
val: "member-49" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-49"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-47
---------------------------------------
val: "member-47" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-47"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-45
---------------------------------------
val: "member-45" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-45"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-44
---------------------------------------
val: "member-44" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-44"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-42
---------------------------------------
val: "member-42" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-42"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-38
---------------------------------------
val: "member-38" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-38"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-36
---------------------------------------
val: "member-36" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-36"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-28
---------------------------------------
val: "member-28" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-28"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-27
---------------------------------------
val: "member-27" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-27"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-26
---------------------------------------
val: "member-26" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-26"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-25
---------------------------------------
val: "member-25" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-25"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-24
---------------------------------------
val: "member-24" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-24"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-22
---------------------------------------
val: "member-22" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-22"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-17
---------------------------------------
val: "member-17" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-17"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-16
---------------------------------------
val: "member-16" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-16"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-15
---------------------------------------
val: "member-15" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-15"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-10
---------------------------------------
val: "member-10" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-10"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-10
---------------------------------------
val: "member-10" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-10"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-10
---------------------------------------
val: "member-10" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-10"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-11
---------------------------------------
val: "member-11" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-11"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-1
---------------------------------------
val: "member-1" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-1"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-2
---------------------------------------
val: "member-2" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-2"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-3
---------------------------------------
val: "member-3" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-3"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-4
---------------------------------------
val: "member-4" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-4"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-5
---------------------------------------
val: "member-5" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-5"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-6
---------------------------------------
val: "member-6" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-6"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-7
---------------------------------------
val: "member-7" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-7"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-8
---------------------------------------
val: "member-8" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-8"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-9
---------------------------------------
val: "member-9" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-9"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-10
---------------------------------------
val: "member-10" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-10"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-11
---------------------------------------
val: "member-11" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-11"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-12
---------------------------------------
val: "member-12" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-12"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-13
---------------------------------------
val: "member-13" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-13"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-14
---------------------------------------
val: "member-14" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-14"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-15
---------------------------------------
val: "member-15" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-15"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-16
---------------------------------------
val: "member-16" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-16"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-17
---------------------------------------
val: "member-17" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-17"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-18
---------------------------------------
val: "member-18" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-18"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-20
---------------------------------------
val: "member-20" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-20"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-21
---------------------------------------
val: "member-21" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-21"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-22
---------------------------------------
val: "member-22" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-22"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-23
---------------------------------------
val: "member-23" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-23"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-24
---------------------------------------
val: "member-24" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-24"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-25
---------------------------------------
val: "member-25" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-25"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-26
---------------------------------------
val: "member-26" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-26"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-27
---------------------------------------
val: "member-27" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-27"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-28
---------------------------------------
val: "member-28" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-28"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-29
---------------------------------------
val: "member-29" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-29"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-30
---------------------------------------
val: "member-30" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-30"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-31
---------------------------------------
val: "member-31" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-31"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-32
---------------------------------------
val: "member-32" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-32"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-33
---------------------------------------
val: "member-33" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-33"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-34
---------------------------------------
val: "member-34" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-34"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-35
---------------------------------------
val: "member-35" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-35"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-36
---------------------------------------
val: "member-36" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-36"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-37
---------------------------------------
val: "member-37" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-37"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-38
---------------------------------------
val: "member-38" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-38"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-39
---------------------------------------
val: "member-39" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-39"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-40
---------------------------------------
val: "member-40" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-40"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-42
---------------------------------------
val: "member-42" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-42"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-43
---------------------------------------
val: "member-43" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-43"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-44
---------------------------------------
val: "member-44" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-44"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-45
---------------------------------------
val: "member-45" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-45"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-46
---------------------------------------
val: "member-46" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-46"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-47
---------------------------------------
val: "member-47" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-47"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-48
---------------------------------------
val: "member-48" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-48"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-49
---------------------------------------
val: "member-49" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-49"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-50
---------------------------------------
val: "member-50" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-50"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-51
---------------------------------------
val: "member-51" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-51"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-52
---------------------------------------
val: "member-52" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-52"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-53
---------------------------------------
val: "member-53" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-53"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-54
---------------------------------------
val: "member-54" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-54"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-55
---------------------------------------
val: "member-55" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-55"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-56
---------------------------------------
val: "member-56" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-56"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-57
---------------------------------------
val: "member-57" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-57"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-58
---------------------------------------
val: "member-58" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-58"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-59
---------------------------------------
val: "member-59" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-59"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-60
---------------------------------------
val: "member-60" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-60"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-61
---------------------------------------
val: "member-61" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-61"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-62
---------------------------------------
val: "member-62" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-62"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-63
---------------------------------------
val: "member-63" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-63"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-64
---------------------------------------
val: "member-64" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-64"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-65
---------------------------------------
val: "member-65" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-65"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-66
---------------------------------------
val: "member-66" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-66"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-67
---------------------------------------
val: "member-67" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-67"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-68
---------------------------------------
val: "member-68" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-68"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-69
---------------------------------------
val: "member-69" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-69"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-70
---------------------------------------
val: "member-70" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-70"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-71
---------------------------------------
val: "member-71" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-71"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-72
---------------------------------------
val: "member-72" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-72"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-73
---------------------------------------
val: "member-73" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-73"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-74
---------------------------------------
val: "member-74" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-74"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-75
---------------------------------------
val: "member-75" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-75"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-76
---------------------------------------
val: "member-76" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-76"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-77
---------------------------------------
val: "member-77" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-77"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-78
---------------------------------------
val: "member-78" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-78"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-81
---------------------------------------
val: "member-81" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-81"

---------------------------------------

08-09 19:03:46 ubuntupc.soahojen TRACE [fiberweb.utils:?] - 
---------- fiberweb/utils.clj 48 ------------
member-999
---------------------------------------
val: "member-999" fails spec: :estate/_id predicate: (and (string? %) (re-matches estateid-regex %))
:clojure.spec.alpha/spec  :estate/_id
:clojure.spec.alpha/value  "member-999"

---------------------------------------

